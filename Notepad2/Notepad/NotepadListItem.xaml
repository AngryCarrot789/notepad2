<UserControl x:Class="Notepad2.Notepad.NotepadListItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:Notepad2.Converters" 
             Foreground="{DynamicResource ControlDefaultForeground}"
             MouseDown="ControlMouseDown" 
             Focusable="True"
             mc:Ignorable="d" 
             d:DesignWidth="200" Height="57" 
             MinHeight="57" MaxHeight="80"
             Padding="0" BorderThickness="0"
             Background="Transparent"
             ToolTip="Notepad Item. Click and Drag to DragDrop."
             AllowDrop="False">
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="MouseEnter">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Duration="0:0:0.1" To="80" Storyboard.TargetProperty="Height" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="MouseLeave">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Duration="0:0:0.1" To="57" Storyboard.TargetProperty="Height" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>
   
    <UserControl.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:FileSizeFormatConverter x:Key="FileSizeFormatConverter"/>
        <converters:TextChangedToUnsavedIndicatorConverter x:Key="BoolTohasChanged"/>
        <converters:FileSizeToColourConverter x:Key="fileSizeToColour"/>
    </UserControl.Resources>
    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Header="Close" Command="{Binding CloseFileCommand}" Template="{DynamicResource SingleDropDownMenuItem}">
                <MenuItem.Icon>
                    <TextBlock Text="X" FontSize="13" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFE82020"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Open in New Window" Command="{Binding OpenInNewWindowCommand}" Template="{DynamicResource SingleDropDownMenuItem}">
                <MenuItem.Icon>
                    <Grid Width="12" Height="12">
                        <Rectangle StrokeThickness="1" 
                               Fill="{DynamicResource ControlBrightDefaultBorderBrush}"
                               Stroke="{DynamicResource ControlGlythColour}"
                               Margin="3,0,0,3"/>
                        <Rectangle StrokeThickness="1" 
                               Fill="{DynamicResource ControlBrightDefaultBorderBrush}"
                               Stroke="{DynamicResource ControlGlythColour}"
                               Margin="0 3 3 0"/>
                    </Grid>
                </MenuItem.Icon>
            </MenuItem>

            <Separator Style="{DynamicResource MenuItemSeparator}"/>
            
            <MenuItem Header="Refresh File Contents" Command="{Binding RefreshContentsCommand}" ToolTip="Re-fetch text from the file path. (e.g. if you want to undo all changes). Does nothing if this item's path doesn't exist." Template="{DynamicResource SingleDropDownMenuItem}"/>
            <MenuItem Header="Rename File" Click="RenameFileClick" Template="{DynamicResource SingleDropDownMenuItem}">
                <MenuItem.Icon>
                    <TextBlock Text="I" FontFamily="Consolas" Height="14" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Set File Extension" Template="{DynamicResource DropDownMenuItemStyle}">
                <MenuItem Header="Plain Text"      InputGestureText=".txt"  Uid=".txt"  Click="SetFileExtensionsClicks" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="Fake Text?"      InputGestureText=".text" Uid=".text" Click="SetFileExtensionsClicks" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="C# File"         InputGestureText=".cs"   Uid=".cs"   Click="SetFileExtensionsClicks" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="C File"          InputGestureText=".c"    Uid=".c"    Click="SetFileExtensionsClicks" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="C++ File"        InputGestureText=".cpp"  Uid=".cpp"  Click="SetFileExtensionsClicks" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="C/C++ Header"    InputGestureText=".h"    Uid=".h"    Click="SetFileExtensionsClicks" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="C++ Header"      InputGestureText=".hpp"  Uid=".hpp"  Click="SetFileExtensionsClicks" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="XAML File"       InputGestureText=".xaml" Uid=".xaml" Click="SetFileExtensionsClicks" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="XML File"        InputGestureText=".xml"  Uid=".xml"  Click="SetFileExtensionsClicks" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="HTM File"        InputGestureText=".htm"  Uid=".htm"  Click="SetFileExtensionsClicks" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="HTML File"       InputGestureText=".html" Uid=".html" Click="SetFileExtensionsClicks" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="CSS File"        InputGestureText=".css"  Uid=".css"  Click="SetFileExtensionsClicks" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="JavaScript File" InputGestureText=".js"   Uid=".js"   Click="SetFileExtensionsClicks" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="EXE File"        InputGestureText=".exe"  Uid=".exe"  Click="SetFileExtensionsClicks" Template="{DynamicResource SingleDropDownMenuItem}"/>
            </MenuItem>
            <MenuItem Header="Delete File" Command="{Binding DeleteFileCommand}" Template="{DynamicResource SingleDropDownMenuItem}">
                <MenuItem.Icon>
                    <Image Source="/SharpPad;component/Resources/binCan.png"/>
                </MenuItem.Icon>
            </MenuItem>

            <Separator Style="{DynamicResource MenuItemSeparator}"/>

            <MenuItem Header="Copy path" Command="{Binding CopyPathCommand}" Template="{DynamicResource SingleDropDownMenuItem}"/>
            <MenuItem Header="Open in File Explorer" Command="{Binding OpenInFileExplorerCommand}" Template="{DynamicResource SingleDropDownMenuItem}">
                <MenuItem.Icon>
                    <Image Source="/SharpPad;component/Resources/openFile.png"/>
                </MenuItem.Icon>
            </MenuItem>

            <Separator Style="{DynamicResource MenuItemSeparator}"/>
            <CheckBox Margin="5,2,0,2" Content="Word Counter"
                      IsChecked="{Binding Notepad.Document.UseWordCount, UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="Auto-select words when you select text" Width="114"/>
            <MenuItem Header="Show Properties" Command="{Binding ShowPropertiesCommand}" Template="{DynamicResource SingleDropDownMenuItem}">
                <MenuItem.Icon>
                    <Image Source="/SharpPad;component/Resources/preferencesIcon.png"/>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </UserControl.ContextMenu>
    <Grid Name="grd" Background="Transparent">
        <Rectangle Margin="3,3,0,3"
                   Width="7" 
                   HorizontalAlignment="Left"
                   MouseMove="GripMouseMove" 
                   MouseLeftButtonDown="GripLeftMouseButtonDown"
                   MouseLeave="GripMouseLeave"
                   ToolTip="Click and Drag for special DragDrop. if the file doesn't exist, this will auto-update this item's path where you drop the file">
            <Rectangle.Fill>
                <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" Viewport="0,0,4,4" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                    <DrawingBrush.Drawing>
                        <DrawingGroup>
                            <GeometryDrawing Brush="{DynamicResource ControlBrightDefaultBackground}" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                            <GeometryDrawing Brush="{DynamicResource ControlBrightDefaultBorderBrush}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                        </DrawingGroup>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Grid Background="Transparent" Margin="11,0,3,0" MouseMove="Grid_MouseMove" MouseLeftButtonDown="Grid_MouseLeftButtonDown">
            <DockPanel Margin="2,3,55,0" Height="21" VerticalAlignment="Top">
                <Grid Width="20" DockPanel.Dock="Left"
                      SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="Fant"
                      ToolTip="Changes have not been changed"
                      Visibility="{Binding Notepad.HasMadeChanges, Converter={StaticResource BoolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                    <Image Source="/SharpPad;component/Resources/alertSaveFile.png" Width="16"
                           ToolTip="You have unsaved work!">
                        <!--
                        <Image.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.8" To="20" AutoReverse="True" Storyboard.TargetProperty="Width" RepeatBehavior="Forever"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Image.Triggers>
                        -->
                    </Image>
                </Grid>
                <TextBox Text="{Binding Notepad.Document.FileName, UpdateSourceTrigger=PropertyChanged, FallbackValue=FileName.txt}" 
                         ToolTip="{Binding Notepad.Document.FileName, UpdateSourceTrigger=PropertyChanged, FallbackValue=FileName.txt}"
                         VerticalScrollBarVisibility="Disabled"
                         AcceptsReturn="False"
                         Name="fileNameBox"
                         TextWrapping="NoWrap"
                         FontSize="14"
                         Background="Transparent"
                         BorderBrush="Transparent"
                         AllowDrop="False"
                         VerticalContentAlignment="Center"/>
            </DockPanel>

            <Button Background="Transparent" BorderBrush="Transparent" 
                    HorizontalAlignment="Right" Margin="0,3,0,0" VerticalAlignment="Top" 
                    Width="20" Height="20" 
                    ToolTip="Close/Remove this item"
                    Command="{Binding CloseFileCommand}">
                <Path Width="10" Height="10" Margin="0,0,0,0" 
                      HorizontalAlignment="Center" VerticalAlignment="Center" 
                      Stretch="Fill" 
                      Data="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z " 
                      Fill="#FFE82020" />
            </Button>
            <Button Background="Transparent" BorderBrush="Transparent" 
                    HorizontalAlignment="Right" Margin="0,23,0,0" VerticalAlignment="Top" 
                    Width="20" Height="17" 
                    ToolTip="Rename the file (highlight the file name, not extension)"
                    Click="RenameFileClick">
                <TextBlock Text="I" FontFamily="Consolas" Height="14" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Button>
            <Button Background="Transparent" BorderBrush="Transparent" 
                    HorizontalAlignment="Right" Margin="0,3,20,0" VerticalAlignment="Top" 
                    Width="20" Height="20"
                    ToolTip="Open this item in a new window and close it from the current window"
                    Command="{Binding OpenInNewWindowCommand}">
                <Grid Width="12" Height="12">
                    <Rectangle StrokeThickness="1" 
                               Fill="{DynamicResource ControlBrightDefaultBorderBrush}"
                               Stroke="{DynamicResource ControlGlythColour}"
                               Margin="3,0,0,3"/>
                    <Rectangle StrokeThickness="1" 
                               Fill="{DynamicResource ControlBrightDefaultBorderBrush}"
                               Stroke="{DynamicResource ControlGlythColour}"
                               Margin="0 3 3 0"/>
                </Grid>
            </Button>

            <TextBlock Text="{Binding Notepad.HasMadeChanges, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolTohasChanged},FallbackValue=SavedOrUnsaved}" 
                       Width="80" HorizontalAlignment="Left" Margin="3,24,0,0" 
                       TextWrapping="NoWrap"
                       FontSize="10" Height="14" VerticalAlignment="Top"/>

            <Grid Margin="3,38,2,0" Height="15" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>
                <Grid.Background>
                    <SolidColorBrush Color="{Binding Notepad.Document.FileSizeBytes, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource fileSizeToColour}, FallbackValue=Transparent}" Opacity="0.2"/>
                </Grid.Background>
                <TextBlock Text="Chars:" VerticalAlignment="Center" FontSize="11" TextWrapping="NoWrap" Height="15" HorizontalAlignment="Left" Width="32"/>
                <TextBlock Text="{Binding Notepad.Document.Text.Length, UpdateSourceTrigger=PropertyChanged, FallbackValue=NoOfChars}" TextWrapping="NoWrap" VerticalAlignment="Center" Margin="32,0,1,0" FontSize="11" TextAlignment="Left"/>
                <TextBlock Text="{Binding Notepad.Document.FileSizeBytes, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource FileSizeFormatConverter}, FallbackValue=SizeBytes}" TextWrapping="NoWrap" VerticalAlignment="Center" Margin="1,0,0,0" FontSize="10" TextAlignment="Right" Grid.Column="1"/>
            </Grid>
            <CheckBox Content="Read Only" IsChecked="{Binding Notepad.Document.IsReadOnly, UpdateSourceTrigger=PropertyChanged}" Margin="2,58,2,2"
                      ToolTip="Immidiately sets this file as read only. If the path doesn't exist, when you goto save, it will save the save and then set the file as read only. Meaning, once you save/set this as true, you can't save again until you set this to false (not read only)"/>
        </Grid>
    </Grid>
</UserControl>
