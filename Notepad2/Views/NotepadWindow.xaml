<Window x:Class="Notepad2.Views.NotepadWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:media="clr-namespace:System.Windows.Media;assembly=PresentationCore"
        xmlns:win="clr-namespace:System.Windows;assembly=PresentationCore"
        xmlns:local="clr-namespace:Notepad2"
        xmlns:utils="clr-namespace:Notepad2.Utilities"
        xmlns:ap="clr-namespace:Notepad2.AttachedProperties"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:fileExplorerShell="clr-namespace:Notepad2.FileExplorer.ShellClasses"
        xmlns:converters="clr-namespace:Notepad2.Converters"
        xmlns:se="clr-namespace:Notepad2.SimpleEditor" 
        xmlns:notepad="clr-namespace:Notepad2.Notepad" 
        xmlns:history="clr-namespace:Notepad2.History" 
        xmlns:informationstuff="clr-namespace:Notepad2.InformationStuff" 
        xmlns:finding="clr-namespace:Notepad2.Finding"
        mc:Ignorable="d"
        Closing="Window_Closing"
        GotFocus="Window_GotFocus"
        Style="{DynamicResource CustomWindowStyle}"
        BorderBrush="{DynamicResource ControlDefaultBackground}"
        MinHeight="532" 
        MinWidth="872"
        Height="576" 
        Width="900"
        Icon="/SharpPad;component/notepadIcon.ico"
        Title="SharpPad">
    <!-- 
        Not separating large chunks of the UI into smaller usercontrols 
        mainly because i prefer not to because it's sort of easier and 
        somehow "cleaner"/easier to access things.
    -->
    <Window.Resources>
        <converters:InvertBoolConverter x:Key="InvertBoolConverter"/>
        <converters:InvertedBoolToVisibilityConverter x:Key="invertedBoolToVis"/>
        <DropShadowBitmapEffect x:Key="NormalShadow" ShadowDepth="2" Softness="0.2" Opacity="0.64"/>
        <ObjectDataProvider x:Key="FontFamilyOptions" ObjectType="{x:Type Fonts}" MethodName="get_SystemFontFamilies"/>
        <converters:TextToFontDecorationConverter x:Key="textDecoConverter"/>
        <x:Array x:Key="FontSizeOptions" Type="{x:Type sys:Double}">
            <sys:Double>2</sys:Double>
            <sys:Double>4</sys:Double>
            <sys:Double>6</sys:Double>
            <sys:Double>8</sys:Double>
            <sys:Double>10</sys:Double>
            <sys:Double>11</sys:Double>
            <sys:Double>12</sys:Double>
            <sys:Double>13</sys:Double>
            <sys:Double>14</sys:Double>
            <sys:Double>15</sys:Double>
            <sys:Double>16</sys:Double>
            <sys:Double>18</sys:Double>
            <sys:Double>20</sys:Double>
            <sys:Double>24</sys:Double>
            <sys:Double>32</sys:Double>
            <sys:Double>36</sys:Double>
            <sys:Double>40</sys:Double>
            <sys:Double>48</sys:Double>
            <sys:Double>64</sys:Double>
            <sys:Double>72</sys:Double>
            <sys:Double>100</sys:Double>
            <sys:Double>144</sys:Double>
        </x:Array>
        <x:Array x:Key="FontWeightOptions" Type="{x:Type FontWeight}">
            <FontWeight>Normal</FontWeight>
            <FontWeight>Bold</FontWeight>
            <FontWeight>ExtraBold</FontWeight>
        </x:Array>
        <x:Array x:Key="FontStyleOptions" Type="{x:Type FontStyle}">
            <FontStyle>Normal</FontStyle>
            <FontStyle>Italic</FontStyle>
            <FontStyle>Oblique</FontStyle>
        </x:Array>
        <x:Array x:Key="TextDeocrationOptions" Type="{x:Type sys:String}">
            <sys:String>None</sys:String>
            <sys:String>Underline</sys:String>
            <sys:String>Strikethrough</sys:String>
            <sys:String>OverLine</sys:String>
            <sys:String>Baseline</sys:String>
        </x:Array>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="{Binding CloseViewWithCheckCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding NewCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding OpenCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="F" Command="{Binding AutoShowFindMenuCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="W" Command="{Binding CloseWindowCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="T" Command="{Binding NewWindowCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="R" Command="{Binding History.ReopenLastFileCommand}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="T" Command="{Binding ReopenLastWindowCommand}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="S" Command="{Binding SaveAllCommand}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="O" Command="{Binding OpenDirectoryCommand}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="W" Command="{Binding CloseAllWindowsCommand}"/>
    </Window.InputBindings>
    <Grid Background="{DynamicResource BackgroundColour}">
        <Menu VerticalAlignment="Top" HorizontalAlignment="Stretch" Background="{DynamicResource BackgroundColour}">
            <MenuItem Header="File">
                <MenuItem Header="New" Command="{Binding NewCommand}" Template="{DynamicResource SingleDropDownMenuItem}" InputGestureText="Ctrl + N">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/newFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="New Window" Command="{Binding NewWindowCommand}" Template="{DynamicResource SingleDropDownMenuItem}" InputGestureText="Ctrl + T">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/openInNewWindow.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Open" Command="{Binding OpenCommand}" Template="{DynamicResource SingleDropDownMenuItem}" InputGestureText="Ctrl + O">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/openFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Open Folder" Command="{Binding OpenDirectoryCommand}" InputGestureText="Ctrl Shift + O" Template="{DynamicResource SingleDropDownMenuItem}">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/openFolder.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save" Command="{Binding SaveCommand}" IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}" Template="{DynamicResource SingleDropDownMenuItem}" InputGestureText="Ctrl + S">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/saveFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save as..." Command="{Binding SaveAsCommand}" IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}" Template="{DynamicResource SingleDropDownMenuItem}">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/saveFileAs.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save all" Command="{Binding SaveAllCommand}" IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}" Template="{DynamicResource SingleDropDownMenuItem}" InputGestureText="Ctrl + Shift + S">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/saveAll.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator Style="{DynamicResource MenuItemSeparator}" />
                <MenuItem Header="Close Selected Notepad" Command="{Binding CloseSelectedNotepadCommand}" IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}" InputGestureText="Ctrl + Delete" Template="{DynamicResource SingleDropDownMenuItem}">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/closeFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator Style="{DynamicResource MenuItemSeparator}" />
                <MenuItem Header="Preferences..." Command="{Binding Preference.ShowPreferencesCommand}" Template="{DynamicResource SingleDropDownMenuItem}">
                    <MenuItem.Icon>
                        <Image Source="/SharpPad;component/Resources/preferencesIcon.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Theme">
                <MenuItem Header="Light" Template="{DynamicResource SingleDropDownMenuItem}" Click="ChangeTheme" Uid="0">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FF848484" Fill="#FFE8E8E8" StrokeThickness="2" StrokeLineJoin="Round" BitmapEffect="{StaticResource NormalShadow}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Colourful Light" Template="{DynamicResource SingleDropDownMenuItem}" Click="ChangeTheme" Uid="1">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FF2C7FF5" Fill="#FFE8E8E8" StrokeThickness="2" StrokeLineJoin="Round" BitmapEffect="{StaticResource NormalShadow}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Dark" Template="{DynamicResource SingleDropDownMenuItem}" Click="ChangeTheme" Uid="2">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FF404040" Fill="#FF1B1B1B" StrokeThickness="2" StrokeLineJoin="Round" BitmapEffect="{StaticResource NormalShadow}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Colourful Dark" Template="{DynamicResource SingleDropDownMenuItem}" Click="ChangeTheme" Uid="3">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FF2C7FF5" Fill="#FF1B1B1B" StrokeThickness="2" StrokeLineJoin="Round" BitmapEffect="{StaticResource NormalShadow}"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Windows">
                <MenuItem Header="Close this window" Command="{Binding CloseWindowCommand}" Template="{DynamicResource SingleDropDownMenuItem}">
                    <MenuItem.Icon>
                        <TextBlock Text="X" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFE82020"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Re-open last window" Command="{Binding ReopenLastWindowCommand}" Template="{DynamicResource SingleDropDownMenuItem}">
                    <MenuItem.Icon>
                        <Grid Width="12" Height="12">
                            <Rectangle StrokeThickness="1" 
                                       Fill="{DynamicResource ControlBrightDefaultBorderBrush}"
                                       Stroke="{DynamicResource ControlGlythColour}"
                                       Margin="3,0,0,3"/>
                            <Rectangle StrokeThickness="1" 
                                       Fill="{DynamicResource ControlBrightDefaultBorderBrush}"
                                       Stroke="{DynamicResource ControlGlythColour}"
                                       Margin="0 3 3 0"/>
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator Style="{DynamicResource MenuItemSeparator}"/>
                <MenuItem Header="Set resolution to 576p" Click="ChangeResolutionClick" Uid="0" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="Set resolution to 648p" Click="ChangeResolutionClick" Uid="1" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="Set resolution to 720p" Click="ChangeResolutionClick" Uid="2" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="Set resolution to 960p" Click="ChangeResolutionClick" Uid="3" Template="{DynamicResource SingleDropDownMenuItem}"/>
                <MenuItem Header="Set to recommended resolution" Click="ChangeResolutionClick" Uid="4" Template="{DynamicResource SingleDropDownMenuItem}"/>
            </MenuItem>
            <MenuItem Header="About" Cursor="Help" Command="{Binding ShowHelpCommand}"/>
        </Menu>
        <DockPanel Margin="5,18,5,5" Background="{DynamicResource BackgroundColour}">
            <StackPanel DockPanel.Dock="Top" Background="{DynamicResource BackgroundColour}">
                <Grid HorizontalAlignment="Stretch" Height="28">
                    <Button Command="{Binding NewCommand}" ToolTip="Add New Blank File (Ctrl + N)" 
                            BorderBrush="Transparent" Background="Transparent" 
                            Focusable="False" HorizontalAlignment="Left" Width="28">
                        <Image Margin="2" Source="/SharpPad;component/Resources/newFile.png"/>
                    </Button>
                    <Button Command="{Binding OpenCommand}" ToolTip="Open File from File Explorer (Ctrl + O)"
                            BorderBrush="Transparent" Background="Transparent" 
                            Focusable="False" Margin="30,0,0,0" HorizontalAlignment="Left" Width="28">
                        <Image Margin="2" Source="/SharpPad;component/Resources/openFile.png"/>
                    </Button>
                    <Grid IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}" Margin="60,0,0,0" HorizontalAlignment="Left" Width="186">
                        <Button Command="{Binding SaveCommand}" ToolTip="Save current File (Ctrl + S)" 
                                BorderBrush="Transparent" 
                                Background="Transparent" Focusable="False" HorizontalAlignment="Left" Width="28">
                            <Image Margin="2" Source="/SharpPad;component/Resources/saveFile.png"/>
                        </Button>
                        <Button Command="{Binding SaveAsCommand}" ToolTip="Save current File As..." 
                                BorderBrush="Transparent" Background="Transparent" 
                                Focusable="False" Margin="30,0,0,0" HorizontalAlignment="Left" Width="28">
                            <Image Margin="2" Source="/SharpPad;component/Resources/saveFileAs.png"/>
                        </Button>
                        <Button Command="{Binding CloseSelectedNotepadCommand}" ToolTip="Close current File and Remove" 
                                BorderBrush="Transparent" Background="Transparent" 
                                Focusable="False" Margin="60,0,0,0" HorizontalAlignment="Left" Width="28">
                            <Image Margin="2" Source="/SharpPad;component/Resources/closeFile.png"/>
                        </Button>
                        <Button Command="{Binding CloseAllNotepadsCommand}" ToolTip="Close ALL Files and Remove them" 
                                BorderBrush="Transparent" Background="Transparent" 
                                Focusable="False" Margin="90,0,0,0" HorizontalAlignment="Left" Width="28">
                            <Image Margin="2" Source="/SharpPad;component/Resources/closeAllFiles.png"/>
                        </Button>
                        <Button Command="{Binding PrintFileCommand}" IsEnabled="True" 
                                BorderBrush="Transparent" Background="Transparent"
                                ToolTip="Print text" Focusable="False" Margin="120,0,0,0" HorizontalAlignment="Left" Width="32">
                            <Image Margin="2" Source="/SharpPad;component/Resources/printIcon.png"/>
                        </Button>
                        <Button Command="{Binding AutoShowFindMenuCommand}" IsEnabled="True"
                                BorderBrush="Transparent" Background="Transparent"
                                ToolTip="Find text in notepad (works okayish, not fully reliable)"  
                                Focusable="False" Margin="154,0,0,0" HorizontalAlignment="Left" Width="32">
                            <Image Margin="2" Source="/SharpPad;component/Resources/findReplace.png"/>
                        </Button>
                    </Grid>
                    <Button Command="{Binding ShowWindowManagerCommand}"
                            IsEnabled="True"
                            BorderBrush="Transparent" Background="Transparent"
                            ToolTip="Open the window containing a preview of every other window that's opened."  
                            Focusable="False" Margin="246,0,0,0" HorizontalAlignment="Left" Width="32">
                        <Image Margin="1" Source="/SharpPad;component/Resources/previewWindow.png"/>
                    </Button>
                    <Separator Style="{DynamicResource VerticalSeparator}" Margin="280,2,0,2" Width="2" HorizontalAlignment="Left"/>
                    <Grid Margin="287,0,0,0">
                        <TextBlock Text="Windows Clipboard:" Padding="4" VerticalAlignment="Center" FontSize="12"
                                   ToolTip="To the right will show whatever is currently in the clipboard" 
                                   Margin="0,0,0,0" HorizontalAlignment="Left" Width="115"/>

                        <!-- Testing out attached properties -->
                        <TextBlock Padding="4"
                                   VerticalAlignment="Center" 
                                   TextTrimming="WordEllipsis" 
                                   TextWrapping="NoWrap"
                                   FontSize="12"
                                   FontFamily="Consolas" 
                                   Margin="115,3,0,3" 
                                   Text="Clipboard is Empty"
                                   Opacity="0.5" Visibility="Collapsed"/>

                        <TextBlock Text="{Binding OurClipboard.ClipboardText, UpdateSourceTrigger=PropertyChanged}"
                                   Padding="4"
                                   VerticalAlignment="Center" 
                                   TextTrimming="WordEllipsis" 
                                   TextWrapping="NoWrap"
                                   FontSize="12"
                                   FontFamily="Consolas"
                                   ToolTip="{Binding OurClipboard.ClipboardText, UpdateSourceTrigger=PropertyChanged}"
                                   MouseDown="OpenClipboardClick"
                                   Cursor="Hand" Margin="115,3,0,3"/>
                    </Grid>
                </Grid>
                <StackPanel IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}" 
                            Margin="0 5 0 0" Orientation="Horizontal" HorizontalAlignment="Left" Height="28">
                    <ComboBox ItemsSource="{Binding Source={StaticResource FontFamilyOptions}}" 
                              SelectedItem="{Binding Notepad.DocumentFormat.Family, UpdateSourceTrigger=PropertyChanged}" 
                              ToolTip="Font" IsEditable="True" SelectedIndex="0" 
                              HorizontalAlignment="Left" Width="155">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" FontFamily="{Binding}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox Width="65" 
                              ItemsSource="{Binding Source={StaticResource FontSizeOptions}}"
                              SelectedIndex="9"
                              SelectedItem="{Binding Notepad.DocumentFormat.Size, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="Font Size"
                              HorizontalAlignment="Left"
                              Margin="5 0 0 0">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox ItemsSource="{Binding Source={StaticResource FontStyleOptions}}"
                              ToolTip="Font Styles (e.g, italics)"
                              SelectedIndex="0"
                              SelectedItem="{Binding Notepad.DocumentFormat.Style, UpdateSourceTrigger=PropertyChanged}"
                              Margin="5 0 0 0" Width="85">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" FontStyle="{Binding}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox ItemsSource="{Binding Source={StaticResource FontWeightOptions}}"
                              ToolTip="Font Weight (e.g, bold)"
                              SelectedIndex="0"
                              SelectedItem="{Binding Notepad.DocumentFormat.Weight, UpdateSourceTrigger=PropertyChanged}"
                              Margin="5,0,0,0" Width="88">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" FontWeight="{Binding}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox SelectedIndex="0"
                              ItemsSource="{Binding Source={StaticResource TextDeocrationOptions}}"
                              ToolTip="Text Decorations (e.g, underline, strikethrough)"
                              SelectedItem="{Binding Notepad.DocumentFormat.DecorationReadable, UpdateSourceTrigger=PropertyChanged}"
                              Margin="5,0,0,0" Width="110">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" TextDecorations="{Binding Converter={StaticResource textDecoConverter}, FallbackValue=None}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <CheckBox Margin="5,0,0,0" Content="Wrap Text" 
                              ToolTip="Text Wrapping: stops text exceeding the max width of textbox, aka never have to horizontally scroll."
                              IsChecked="{Binding Notepad.DocumentFormat.IsWrapped, UpdateSourceTrigger=PropertyChanged}" 
                              Height="Auto" Width="80"/>
                    <CheckBox x:Name="showLineThing"
                              Margin="5,0,0,0" Content="Show Line Border" 
                              ToolTip="The Border around the seleced line (aka caret index) of the text editor"
                              Height="Auto"
                              Checked="ShowLineThing_Checked" 
                              Unchecked="ShowLineThing_Checked" Width="117"/>
                </StackPanel>
            </StackPanel>
            <DockPanel Margin="0,4,0,0" Background="{DynamicResource BackgroundColour}">
                <Expander ExpandDirection="Up" 
                          Header="Information and History" 
                          VerticalAlignment="Bottom"
                          DockPanel.Dock="Bottom"
                          IsExpanded="False"
                          Margin="0 0 0 0">
                    <Grid Margin="-1 1 -1 2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6*"/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>
                        <GroupBox DataContext="{Binding InformationView, UpdateSourceTrigger=PropertyChanged}" Height="180" Margin="0,0,4,0">
                            <GroupBox.Header>
                                <StackPanel Orientation="Horizontal" Height="24">
                                    <TextBlock Text="Information, Statuses and errors" VerticalAlignment="Center"/>
                                    <Separator Style="{DynamicResource VerticalSeparator}" Margin="10 0"/>
                                    <Button Content="Clear List" Command="{Binding ClearInfoItemsCommand}" Width="75"/>
                                    <Separator Style="{DynamicResource VerticalSeparator}" Margin="10 0"/>
                                    <TextBlock Text="Items:" VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding InformationItems.Count, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="3 0 0 0"/>

                                </StackPanel>
                            </GroupBox.Header>
                            <ListBox ItemsSource="{Binding InformationItems, UpdateSourceTrigger=PropertyChanged}"
                                     HorizontalContentAlignment="Stretch"
                                     ap:UseHorizontalScrolling.Value="True">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <informationstuff:InformationItemControl DataContext="{Binding}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </GroupBox>
                        <GroupBox Height="180" DataContext="{Binding History}" 
                                      Grid.Column="1" Margin="0">
                            <GroupBox.Header>
                                <StackPanel Orientation="Horizontal" Height="24">
                                    <TextBlock Text="File History" VerticalAlignment="Center"/>
                                    <Separator Style="{DynamicResource VerticalSeparator}" Margin="10 0"/>
                                    <Button Content="Reopen last file" Command="{Binding ReopenLastFileCommand}" Width="100"/>
                                    <Button Content="Clear" Command="{Binding ClearItemsCommand}" Margin="5 0 0 0" Width="60"/>
                                </StackPanel>
                            </GroupBox.Header>
                            <ListBox ItemsSource="{Binding HistoryItems, UpdateSourceTrigger=PropertyChanged}"
                                     ap:UseHorizontalScrolling.Value="True"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     HorizontalContentAlignment="Stretch">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <history:HistoryControl DataContext="{Binding}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </GroupBox>
                    </Grid>
                </Expander>
                <DockPanel Margin="0,0,0,2">
                    <Expander DockPanel.Dock="Right" ExpandDirection="Left" 
                                  HorizontalAlignment="Right" Margin="2 0 0 0">
                        <Expander.Header>
                            <TextBlock Text="File Explorer" FontSize="13">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="90"/>
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <GroupBox Margin="1 -1 2 -1" 
                                  Header="File Explorer" 
                                  Background="{DynamicResource ContainerBackground}" 
                                  Width="200">
                            <Grid>
                                <TreeView ap:UseHorizontalScrolling.Value="True" Name="treeView" 
                                          BorderBrush="{DynamicResource ContainerBackground}">
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="{x:Type TreeViewItem}">
                                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                            <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                            <Setter Property="Padding" Value="1,0,0,0"/>
                                            <Setter Property="Foreground" Value="{DynamicResource ControlDefaultForeground}"/>
                                            <Setter Property="FocusVisualStyle" Value="{DynamicResource TreeViewItemFocusVisual}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <ToggleButton x:Name="Expander" 
                                                                          ClickMode="Press" 
                                                                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                          Style="{DynamicResource ExpandCollapseToggleStyle}"/>
                                                            <Border x:Name="Bd" 
                                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                                                    Background="{TemplateBinding Background}" 
                                                                    Grid.Column="1" 
                                                                    Padding="{TemplateBinding Padding}" 
                                                                    SnapsToDevicePixels="true">
                                                                <ContentPresenter x:Name="PART_Header"
                                                                                  ContentSource="Header" 
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Border>
                                                            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsExpanded" Value="false">
                                                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="HasItems" Value="false">
                                                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ControlMouseOverBackground}"/>
                                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ControlMouseOverBorderBrush}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="IsSelected" Value="true">
                                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ControlSelectedBackground}"/>
                                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ControlSelectedBorderBrush}"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="true"/>
                                                                    <Condition Property="IsSelectionActive" Value="false"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ControlDefaultBackground}"/>
                                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ControlDefaultBorderBrush}"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="IsEnabled" Value="false">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                                    <Setter Property="ItemsPanel">
                                                        <Setter.Value>
                                                            <ItemsPanelTemplate>
                                                                <VirtualizingStackPanel/>
                                                            </ItemsPanelTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                    <TreeView.Resources>
                                        <HierarchicalDataTemplate DataType="{x:Type fileExplorerShell:FileSystemObjectInfo}" ItemsSource="{Binding Path=Children}">
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                                <Rectangle Margin="0 0 5 0" 
                                                           HorizontalAlignment="Left" 
                                                           Width="10" 
                                                           PreviewMouseMove="TreeViewItem_MouseMove" 
                                                           PreviewMouseLeftButtonDown="TreeViewItem_MouseDown"
                                                           ToolTip="Initiate DragDrop, allowing you to drop this item on your desktop or into the notepaditems list on the left" 
                                                           Cursor="SizeAll"
                                                           Visibility="{Binding Path=GripVisible, UpdateSourceTrigger=PropertyChanged}">
                                                    <Rectangle.Fill>
                                                        <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" Viewport="0,0,4,4" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                                            <DrawingBrush.Drawing>
                                                                <DrawingGroup>
                                                                    <GeometryDrawing Brush="{DynamicResource ControlBrightDefaultBackground}" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                                                                    <GeometryDrawing Brush="{DynamicResource ControlBrightDefaultBorderBrush}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                                                </DrawingGroup>
                                                            </DrawingBrush.Drawing>
                                                        </DrawingBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Image Source="{Binding Path=ImageSource, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,3,0"/>
                                                <TextBlock Text="{Binding Path=FileSystemInfo.Name}" Foreground="{DynamicResource ControlDefaultForeground}"/>
                                            </StackPanel>
                                        </HierarchicalDataTemplate>
                                    </TreeView.Resources>
                                </TreeView>
                            </Grid>
                        </GroupBox>
                    </Expander>
                    <DockPanel>
                        <Expander IsExpanded="True" x:Name="ListExpander"
                                  DockPanel.Dock="Left" ExpandDirection="Right" 
                                  HorizontalAlignment="Left" Margin="0">
                            <Expander.Header>
                                <TextBlock Text="Notepad Items" FontSize="13">
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="90"/>
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                            </Expander.Header>
                            <GroupBox Header="Notepad Items" HorizontalAlignment="Left" 
                                      Margin="2 -1 2 -1"
                                      Width="225" 
                                      Background="{DynamicResource BackgroundColour}">
                                <Grid>
                                    <!-- ScrollViewer.CanContentScroll="False"  makes content scroll vertically by pixel not by content height -->
                                    <!-- crollViewer.HorizontalScrollBarVisibility="Disabled"  makes the items always fit the listbox width -->
                                    <ListBox ItemsSource="{Binding NotepadItems, UpdateSourceTrigger=PropertyChanged}"
                                             SelectedIndex="{Binding SelectedIndex, UpdateSourceTrigger=PropertyChanged}"
                                             SelectedItem="{Binding SelectedNotepadItem, UpdateSourceTrigger=PropertyChanged}"
                                             Name="NotepadItemsListBox" 
                                             HorizontalContentAlignment="Stretch" 
                                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                             ScrollViewer.CanContentScroll="False"
                                             AllowDrop="True" 
                                             Padding="0"
                                             Drop="NotepadItemsListBox_ItemsDropped" Margin="0,0,0,68" 
                                             Background="{DynamicResource BackgroundColour}">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <notepad:NotepadListItem DataContext="{Binding}"/>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.InputBindings>
                                            <KeyBinding Command="{Binding CloseSelectedNotepadCommand}" Gesture="Ctrl+Del"/>
                                        </ListBox.InputBindings>
                                        <ListBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Sort by File Name" CommandParameter="fn" Command="{Binding SortListCommand}" Template="{DynamicResource SingleDropDownMenuItem}"/>
                                                <MenuItem Header="Sort by File Size" CommandParameter="fs" Command="{Binding SortListCommand}" Template="{DynamicResource SingleDropDownMenuItem}"/>
                                            </ContextMenu>
                                        </ListBox.ContextMenu>
                                    </ListBox>
                                    <Grid Margin="0,0,0,26" Height="42" VerticalAlignment="Bottom">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Button Command="{Binding CloseAllNotepadsCommand}"  Margin="0,0,75,0"
                                            BorderThickness="1 0 0 1" 
                                            Content="Clear List" BorderBrush="{DynamicResource ControlBrightDefaultBorderBrush}" Grid.RowSpan="2"/>
                                        <Button Command="{Binding MoveItemCommand}" CommandParameter="up"
                                            BorderThickness="1 0 1 1" Content="Move Up" BorderBrush="{DynamicResource ControlBrightDefaultBorderBrush}"
                                            ToolTip="Move the selected NotepadItem upwards in the list" HorizontalAlignment="Right" Width="75"/>
                                        <Button Command="{Binding MoveItemCommand}" CommandParameter="down"
                                            BorderThickness="1 0 1 1" Content="Move Down" BorderBrush="{DynamicResource ControlBrightDefaultBorderBrush}"
                                            ToolTip="Move the selected NotepadItem downwards in the list" HorizontalAlignment="Right" Width="75" Grid.Row="1"/>
                                    </Grid>
                                    <Grid VerticalAlignment="Bottom" Height="23">
                                        <TextBox Text="{Binding ToFindItemText, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Padding="1" VerticalAlignment="Stretch" Margin="0,0,20,0" BorderThickness="1 1 0 1">
                                            <TextBox.InputBindings>
                                                <KeyBinding Key="Enter" Command="{Binding FindNotepadItemCommand}"/>
                                            </TextBox.InputBindings>
                                        </TextBox>
                                        <Button Command="{Binding FindNotepadItemCommand}" HorizontalAlignment="Right" Width="20">
                                            <Image Margin="2" Source="/SharpPad;component/Resources/findReplace.png"/>
                                        </Button>
                                    </Grid>
                                </Grid>
                            </GroupBox>
                        </Expander>
                        <GroupBox Focusable="True" FocusManager.IsFocusScope="True" Margin="1,0,0,0" 
                                      IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}">
                            <GroupBox.Header>
                                <StackPanel Orientation="Horizontal" Height="24">
                                    <TextBlock Text="Text Input" VerticalAlignment="Center"/>
                                    <Separator Style="{DynamicResource VerticalSeparator}" Margin="5,0"/>
                                    <Button Background="Transparent" Command="ApplicationCommands.Cut" ToolTip="Cut (Selected Text)" CommandTarget="{Binding ElementName=MainTextBox}" Margin="0,0,2,0" Focusable="False" Width="28">
                                        <Image Source="/SharpPad;component/Resources/cut.png"/>
                                    </Button>
                                    <Button Background="Transparent" Command="ApplicationCommands.Copy" ToolTip="Copy (Selected Text)" CommandTarget="{Binding ElementName=MainTextBox}" Margin="0,0,2,0" Focusable="False" Width="28">
                                        <Image Source="/SharpPad;component/Resources/copy.png"/>
                                    </Button>
                                    <Button Background="Transparent" Command="ApplicationCommands.Paste" ToolTip="Paste (From Clipboard)" CommandTarget="{Binding ElementName=MainTextBox}" Margin="0,0,2,0" Focusable="False" Width="28">
                                        <Image Source="/SharpPad;component/Resources/paste.png"/>
                                    </Button>
                                    <Button Background="Transparent" Command="ApplicationCommands.Undo" ToolTip="Undo (Last Edit)" CommandTarget="{Binding ElementName=MainTextBox}" Margin="0,0,2,0" Focusable="False" Width="28">
                                        <Image Source="/SharpPad;component/Resources/undo.png"/>
                                    </Button>
                                    <Button Background="Transparent" Command="ApplicationCommands.Redo" ToolTip="Redo (Last Edit)" CommandTarget="{Binding ElementName=MainTextBox}" Margin="0,0,0,0" Focusable="False" Width="28">
                                        <Image Source="/SharpPad;component/Resources/redo.png"/>
                                    </Button>
                                    <CheckBox Margin="5 0 0 0" Content="Auto-word Selection" 
                                              IsChecked="{Binding ElementName=MainTextBox, Path=AutoWordSelection}"
                                              ToolTip="Auto-selected words when you select text"/>
                                </StackPanel>
                            </GroupBox.Header>
                            <Grid Margin="0,0,0,0">
                                <Grid>
                                    <Border Background="Transparent" Margin="0,0,0,20" BorderThickness="0">
                                        <DockPanel>
                                            <Expander IsExpanded="{Binding FindExpanded, UpdateSourceTrigger=PropertyChanged}" 
                                                      DockPanel.Dock="Right" ExpandDirection="Left" 
                                                      HorizontalAlignment="Right" Margin="2 0 0 0">
                                                <Expander.Header>
                                                    <TextBlock Text="Find Text" FontSize="13">
                                                        <TextBlock.LayoutTransform>
                                                            <RotateTransform Angle="90"/>
                                                        </TextBlock.LayoutTransform>
                                                    </TextBlock>
                                                </Expander.Header>
                                                <GroupBox Header="Find text in the Text Input (on left)" 
                                                          MaxWidth="244" MinWidth="244" Margin="1 -1 2 -1">
                                                    <Grid DataContext="{Binding Find, UpdateSourceTrigger=PropertyChanged}">
                                                        <Grid.InputBindings>
                                                            <KeyBinding Key="Esc" Command="{Binding CancelCommand}"/>
                                                            <KeyBinding Key="Enter" Command="{Binding FindOccourancesCommand}"/>
                                                        </Grid.InputBindings>
                                                        <TextBlock HorizontalAlignment="Left" Margin="5,11,0,0" VerticalAlignment="Top"><Run Text="F" TextDecorations="Underline"/><Run Text="ind what:"/></TextBlock>
                                                        <TextBox Text="{Binding FindWhatText, UpdateSourceTrigger=PropertyChanged}" 
                                                                 x:Name="findInputBox" Focusable="True"
                                                                 VerticalContentAlignment="Center"
                                                                 Padding="2" Height="28" Margin="64,5,70,0" 
                                                                 TextWrapping="Wrap" VerticalAlignment="Top"
                                                                 Loaded="FindInputBox_Loaded">
                                                            <TextBox.InputBindings>
                                                                <KeyBinding Key="Enter" Command="{Binding FindOccourancesCommand}"/>
                                                            </TextBox.InputBindings>
                                                        </TextBox>
                                                        <Button Command="{Binding FindOccourancesCommand}" HorizontalAlignment="Right" Margin="0,5,5,0" VerticalAlignment="Top" Width="60" Height="28">
                                                            <TextBlock><Run Text="F" TextDecorations="Underline"/><Run Text="ind All"/></TextBlock>
                                                        </Button>
                                                        <CheckBox IsChecked="{Binding MatchCase, UpdateSourceTrigger=PropertyChanged}" 
                                                                  Margin="5,38,5,0"
                                                                  Height="16"
                                                                  Content="Match Capitalisation" VerticalAlignment="Top"/>
                                                        <Label Content="Found Results. (double-click to highlight)" Padding="0 5" VerticalAlignment="Top" Margin="5,55,5,0"/>
                                                        <ListBox Margin="5,81,5,5"
                                                                 x:Name="findList"
                                                                 HorizontalContentAlignment="Stretch"
                                                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                                 ScrollViewer.CanContentScroll="False"
                                                                 ItemsSource="{Binding FoundItems, UpdateSourceTrigger=PropertyChanged}">
                                                            <ListBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <finding:FindResultItemControl DataContext="{Binding}"/>
                                                                </DataTemplate>
                                                            </ListBox.ItemTemplate>
                                                        </ListBox>
                                                    </Grid>
                                                </GroupBox>
                                            </Expander>
                                            <DockPanel>
                                                <!-- Line Numbers. This is too laggy with many lines. 
                                                so im removing it until i can figure out a better way to do it 
                                                    <Border Background="{DynamicResource ContainerBackground}" 
                                                            BorderBrush="{DynamicResource ControlDefaultBorderBrush}" 
                                                            BorderThickness="1 1 0 1" Width="auto" MinWidth="20"
                                                            Visibility="Hidden">
                                                        <TextBlock DataContext="{Binding Notepad, UpdateSourceTrigger=PropertyChanged}" 
                                                                   HorizontalAlignment="Left" DockPanel.Dock="Left"
                                                                   FontFamily="{Binding DocumentFormat.Family, UpdateSourceTrigger=PropertyChanged}"
                                                                   FontSize="{Binding DocumentFormat.Size, UpdateSourceTrigger=PropertyChanged}"
                                                                   FontStyle="{Binding DocumentFormat.Style, UpdateSourceTrigger=PropertyChanged}"
                                                                   FontWeight="{Binding DocumentFormat.Weight, UpdateSourceTrigger=PropertyChanged}"
                                                                   TextDecorations="{Binding DocumentFormat.Decoration, UpdateSourceTrigger=PropertyChanged}"
                                                                   Text="{Binding LinesCounter.LineCounterText, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </Border>
                                                    -->
                                                <Grid x:Name="editorGrid">
                                                    <!-- Line Numbers. This way is also too laggy
                                                        <TextBlock Text="{Binding (utils:TextBoxLineNumbers.BindableLineCount), ElementName=MainTextBox}" 
                                                                   FontFamily="{Binding Notepad.DocumentFormat.Family, UpdateSourceTrigger=PropertyChanged}"
                                                                   FontSize="{Binding Notepad.DocumentFormat.Size, UpdateSourceTrigger=PropertyChanged}"
                                                                   FontStyle="{Binding Notepad.DocumentFormat.Style, UpdateSourceTrigger=PropertyChanged}"
                                                                   FontWeight="{Binding Notepad.DocumentFormat.Weight, UpdateSourceTrigger=PropertyChanged}"
                                                                   TextDecorations="{Binding Notepad.DocumentFormat.Decoration, UpdateSourceTrigger=PropertyChanged}"
                                                                   TextWrapping="{Binding Notepad.DocumentFormat.Wrap, UpdateSourceTrigger=PropertyChanged}"
                                                                   HorizontalAlignment="Left" DockPanel.Dock="Left" 
                                                                   MinWidth="16" TextAlignment="Center" Margin="2 0"/>
                                                        -->
                                                    <se:TextEditor 
                                                            x:Name="MainTextBox"
                                                            FontFamily="{Binding Notepad.DocumentFormat.Family, UpdateSourceTrigger=PropertyChanged}"
                                                            FontSize="{Binding Notepad.DocumentFormat.Size, UpdateSourceTrigger=PropertyChanged}"
                                                            FontStyle="{Binding Notepad.DocumentFormat.Style, UpdateSourceTrigger=PropertyChanged}"
                                                            FontWeight="{Binding Notepad.DocumentFormat.Weight, UpdateSourceTrigger=PropertyChanged}"
                                                            TextDecorations="{Binding Notepad.DocumentFormat.Decoration, UpdateSourceTrigger=PropertyChanged}"
                                                            TextWrapping="{Binding Notepad.DocumentFormat.Wrap, UpdateSourceTrigger=PropertyChanged}"
                                                            Text="{Binding Notepad.Document.Text, UpdateSourceTrigger=PropertyChanged}"
                                                            AutoWordSelection="False"
                                                            IsInactiveSelectionHighlightEnabled="True"
                                                            AcceptsReturn="True"
                                                            AcceptsTab="True"
                                                            SpellCheck.SpellingReform="Postreform"
                                                            Language="en"
                                                            UndoLimit="500"
                                                            ScrollViewer.PanningMode="Both"
                                                            HorizontalScrollBarVisibility="Visible"
                                                            VerticalScrollBarVisibility="Visible"
                                                            ap:UseHorizontalScrolling.Value="True"
                                                            BorderThickness="1"
                                                            Focusable="True" 
                                                            Visibility="Visible" 
                                                            PreviewMouseWheel="TextBox_MouseWheel"
                                                            SelectionChanged="MainTextBox_SelectionChanged"
                                                            SizeChanged="MainTextBox_SizeChanged" Background="{DynamicResource BackgroundColour}">
                                                        <se:TextEditor.ContextMenu>
                                                            <ContextMenu OverridesDefaultStyle="False">
                                                                <MenuItem Header="Cut"   Command="ApplicationCommands.Cut"   Template="{DynamicResource SingleDropDownMenuItem}"/>
                                                                <MenuItem Header="Copy"  Command="ApplicationCommands.Copy"  Template="{DynamicResource SingleDropDownMenuItem}"/>
                                                                <MenuItem Header="Paste" Command="ApplicationCommands.Paste" Template="{DynamicResource SingleDropDownMenuItem}"/>
                                                                <Separator Style="{DynamicResource MenuItemSeparator}"/>
                                                                <MenuItem Header="Undo"  Command="ApplicationCommands.Undo" Template="{DynamicResource SingleDropDownMenuItem}"/>
                                                                <MenuItem Header="Redo" InputGestureText="Ctrl+Shift+Z or Ctrl+Y" Command="ApplicationCommands.Redo" Template="{DynamicResource SingleDropDownMenuItem}"/>
                                                            </ContextMenu>
                                                        </se:TextEditor.ContextMenu>
                                                        <se:TextEditor.InputBindings>
                                                            <KeyBinding Key="Z" Modifiers="Ctrl+Shift" Command="ApplicationCommands.Redo"/>
                                                        </se:TextEditor.InputBindings>
                                                    </se:TextEditor>
                                                    <Border x:Name="aditionalSelection"
                                                            BorderBrush="{DynamicResource ControlBrightDefaultBorderBrush}"
                                                            Opacity="0.7"
                                                            BorderThickness="2"
                                                            CornerRadius="2"
                                                            HorizontalAlignment="Stretch" 
                                                            VerticalAlignment="Stretch" 
                                                            Margin="Infinity"/>
                                                </Grid>
                                            </DockPanel>
                                        </DockPanel>
                                    </Border>
                                    <DockPanel DataContext="{Binding Notepad, UpdateSourceTrigger=PropertyChanged}" Height="20" VerticalAlignment="Bottom">
                                        <Grid Width="55">
                                            <Border Background="{DynamicResource BackgroundColour}" BorderBrush="{DynamicResource ControlDefaultBorderBrush}" BorderThickness="1"/>
                                            <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Width="50" Margin="4,3,0,3" Height="14" ToolTip="CTRL + Scrollwheel to zoom. also, this is just the fontsize.">
                                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Text="Zoom:" FontSize="10.5"/>
                                                <TextBlock VerticalAlignment="Center" Text="{Binding DocumentFormat.Size, UpdateSourceTrigger=PropertyChanged}" Margin="31,0,0,0" FontSize="10" Height="14"/>
                                            </Grid>
                                        </Grid>
                                        <Grid>
                                            <Border Background="{DynamicResource BackgroundColour}" 
                                                        BorderBrush="{DynamicResource ControlDefaultBorderBrush}" 
                                                        BorderThickness="0 1 1 1"/>
                                            <TextBlock Text="Path:" 
                                                           HorizontalAlignment="Left" 
                                                           Margin="2 0 0 0" 
                                                           VerticalAlignment="Center"/>
                                            <TextBox VerticalAlignment="Center" Background="Transparent"
                                                         DataContext="{Binding Document, UpdateSourceTrigger=PropertyChanged}" 
                                                         Margin="33,1,2,2"
                                                         BorderBrush="Transparent"
                                                         Height="17"
                                                         Text="{Binding FilePath, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>
                                    </DockPanel>
                                </Grid>
                            </Grid>
                        </GroupBox>
                    </DockPanel>
                </DockPanel>
            </DockPanel>
        </DockPanel>
    </Grid>
</Window>
